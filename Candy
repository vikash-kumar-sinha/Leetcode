class Solution {
public:
    // int candy(vector<int>& ratings) {
    //     vector<int> ans(ratings.size(),1);
    //      while(1){
    //          int f=0;
    //     for(int i=0;i<ratings.size()-1;i++)
    //     {
    //         if(ans[i]==ans[i+1]&& ratings[i]!=ratings[i+1])
    //         {f=1;
    //         break;} 
    //     }
    //    if(f==1){
        // for(int i=1;i<ans.size();i++)
        // {
        //    if(ratings[i]>ratings[i-1] && ans[i]<=ans[i-1])
        //    {ans[i]=ans[i-1]+1;}
        //    else if(ratings[i-1]>ratings[i] && ans[i-1]<=ans[i])
        //    ans[i-1]=ans[i]+1;
        // }
        // else
        // {
        //    break;
        // }
        // }


        // for(int i=0;i<ans.size()-1;++i)
        // {
        //    if(ratings[i]<ratings[i-1])
        //    {ans[i+1]=max(ans[i+1],ans[i]+1);}
        //     if(ratings[ratings.size()-1-i]<ratings[ratings.size()-i-2])
        //    ans[ratings.size()-i-2]=max(ans[ratings.size()-i-2],ans[ratings.size()-i-1]+1);
        // }
        // int sum=0;
        // for(int i=0;i<ans.size();i++)
        //  sum+=ans[i];
        
        //  return sum;
       

       int candy(vector<int>& r) {
        int n=r.size();
        vector<int>v(n,1);
        for(int j=0;j<n-1;++j)
        {
            if(r[j]<r[j+1])
            v[j+1]=max(v[j+1],v[j]+1);
            if(r[n-1-j]<r[n-j-2])
            v[n-2-j]=max(v[n-j-2],v[n-1-j]+1);
        }
        n=0;
        for(auto it:v)
        n+=it;
        return n;
    }


        
    };
